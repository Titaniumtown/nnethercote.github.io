var searchIndex = JSON.parse('{\
"dhat":{"doc":"This crate provides heap profiling and ad hoc profiling …","t":[3,3,3,3,3,11,5,11,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AdHocStats","Alloc","HeapStats","Profiler","ProfilerBuilder","ad_hoc","ad_hoc_event","alloc","assert","assert_eq","assert_ne","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","curr_blocks","curr_bytes","dealloc","default","drop","eq","eq","file_name","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get","into","into","into","into","into","max_blocks","max_bytes","ne","ne","new","new_ad_hoc","new_heap","realloc","testing","to_owned","to_owned","total_blocks","total_bytes","total_events","total_units","trim","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["dhat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Stats from ad hoc profiling.","A global allocator that tracks allocations and …","Stats from heap profiling.","A type whose lifetime dictates the start and end of …","A builder for <code>Profiler</code>, for cases beyond the basic ones …","Requests ad hoc profiling.","Registers an event during ad hoc profiling.","","Asserts that an expression is true.","Asserts that two expressions are equal.","Asserts that two expressions are not equal.","","","","","","","","","","","Creates a <code>Profiler</code> from the builder and initiates …","","","","","Number of blocks (a.k.a. allocations) currently allocated.","Number of bytes currently allocated.","","","","","","Sets the name of the file in which profiling data will be …","","","","","","","","","","","Gets the current heap stats.","Gets the current ad hoc stats.","","","","","","Number of blocks (a.k.a. allocations) allocated at the …","Number of bytes allocated at the global peak, i.e. when …","","","Creates a new <code>ProfilerBuilder</code>, which defaults to heap …","Initiates ad hoc profiling.","Initiates allocation profiling.","","Requests testing mode, which allows the use of …","","","Number of blocks (a.k.a. allocations) allocated over the …","Number of bytes allocated over the entire run.","Number of events recorded for the entire run.","Number of units recorded for the entire run.","Requests backtrace trimming of a particular kind.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,0,2,0,0,0,3,1,2,4,5,3,1,2,4,5,1,4,5,4,5,4,4,2,1,3,4,5,1,3,1,2,4,5,3,1,2,4,5,4,5,3,1,2,4,5,4,4,4,5,1,3,3,2,1,4,5,4,4,5,5,1,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5],"f":[null,null,null,null,null,[[]],[[["usize",15]]],[[["layout",3]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["profiler",3]],[[],["heapstats",3]],[[],["adhocstats",3]],[[]],[[]],null,null,[[["layout",3]]],[[]],[[]],[[["heapstats",3]],["bool",15]],[[["adhocstats",3]],["bool",15]],[[["asref",8,["path"]],["path",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["heapstats",3]],["bool",15]],[[["adhocstats",3]],["bool",15]],[[]],[[]],[[]],[[["usize",15],["layout",3]]],[[]],[[]],[[]],null,null,null,null,[[["usize",15],["option",4,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"ProfilerBuilder"],[3,"Alloc"],[3,"Profiler"],[3,"HeapStats"],[3,"AdHocStats"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};